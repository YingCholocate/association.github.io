{"version":3,"file":"static/js/676.1db0ea0d.chunk.js","mappings":"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","sources":["api/User.ts","api/request.ts","webpack://association/./src/pages/register/register.module.css?c54f","pages/register/register.tsx","utils/commonurl.ts"],"sourcesContent":["import request from './request';\nimport { mockurl } from '@/utils/commonurl';\n\nexport interface IUserNumandPw {\n  number: number;\n  password: number;\n}\n\nexport interface Irole {\n  id: number;\n  rolevalue: string;\n}\nexport interface IUser {\n  department: number;\n  number: string;\n  password: string;\n  role: Irole[];\n  username: string;\n}\n\nexport interface IResult {\n  code: number;\n  data: IUser;\n  msg?: string;\n  token: string;\n}\n\n// 判断用户账号密码是否输入正确,正确则登入\nexport const getAuth = async (values: IUserNumandPw): Promise<IResult> => {\n  const result = await request.get(`${mockurl}/users`, {\n    params: {\n      method: 'getone',\n      number: values.number,\n      password: values.password,\n    },\n  });\n  return result.data;\n};\n\n// 删除用户\nexport const deleteUser = (data) => {\n  return request.post(`${mockurl}/users`, data);\n};\n\n// 注册用户\nexport const registerUser = (value) => {\n  return request.post(`${mockurl}/users`, {\n    username: value.username,\n    number: value.number,\n    password: value.password,\n    roleName: value.residence,\n  });\n};\n\n// 获取所有用户信息\nexport const getAllUserInfo = () => {\n  return request.get(`${mockurl}/users`, {\n    params: {\n      method: 'getall',\n    },\n  });\n};\n","/**\n * 封装axios\n */\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { mockurl } from '@/utils/commonurl';\n\n// 定义常见的错误信息\nconst TOKEN_ERROR = 'Token认证失败，请重新登录';\nconst NETWORK_ERROR = '网络异常，请检查网络后重试';\n\n// BASEURL 定义可以同时请求多个端口号\nconst BASEURL = 'http://localhost:3000';\n\n// 创建axios实例对象，添加全局配置\nconst service = axios.create({\n  baseURL: BASEURL,\n  timeout: 8000, // 请求超时时间\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截\nservice.interceptors.request.use((config: any) => {\n  // 在请求发送前进行验证\n\n  const { headers } = config;\n\n  encodeURIComponent(config.params);\n  // 添加token之类的东西\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    headers!.common.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\n// 响应拦截\nservice.interceptors.response.use((config) => {\n  const { status, data } = config;\n  const mockurl1 = '/mock';\n  if (status === 200) {\n    if (mockurl.match(mockurl1) !== null) {\n      return data;\n    }\n    return { data };\n  } else if (status === 1005) {\n    // 和后台约定的，Token过期，code是1005\n    message.error(TOKEN_ERROR);\n    return Promise.reject(TOKEN_ERROR);\n  } else {\n    message.error(NETWORK_ERROR);\n    return Promise.reject(NETWORK_ERROR);\n  }\n});\n\n// 请求核心函数，options 请求配置\nfunction request(options) {\n  // eslint-disable-next-line no-param-reassign\n  options.method = options.method || 'get'; // 如果是get请求的话，则将data中的数据转移到params中\n  if (options.method.toLowerCase() === 'get') {\n    // eslint-disable-next-line no-param-reassign\n    options.params = options.data;\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    // 在正式环境中，不管有没有开启moke开关，都使用正式环境base_url，以防万一\n    service.defaults.baseURL = process.env.BASEURL;\n  } else {\n    // VUE_APP_MOCK为1，代表开启moke模式\n    service.defaults.baseURL =\n      process.env.VUE_APP_MOCK === '1'\n        ? process.env.VUE_APP_MOCK_API\n        : process.env.VUE_APP_BASE_API;\n  }\n\n  return service(options);\n}\n/**\n * 可以通过 request.get() 方式调用\n */\n['get', 'post', 'put', 'delete', 'patch'].forEach((item) => {\n  request[item] = (url, data, options) => {\n    return request({\n      method: item,\n      url,\n      data,\n      ...options,\n    });\n  };\n});\n\n// export default request;\nexport default service;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"register_container__XjZwH\",\"logo\":\"register_logo__vsXwX\",\"logoText\":\"register_logoText__qW9mw\",\"registerformbtn\":\"register_registerformbtn__dFUwi\",\"formcontainer\":\"register_formcontainer__2bBsL\",\"tologin\":\"register_tologin__kvaAs\",\"bgContainer\":\"register_bgContainer__TB4Wr\",\"bgColor\":\"register_bgColor__EmJZ9\"};","import React from 'react';\nimport { Form, Input, Cascader, Button, Image } from 'antd';\nimport style from './register.module.css';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { registerUser } from '@/api/User';\nimport path from '@/assets/photologo.png';\n\nconst residences = [\n  {\n    value: '会员',\n    label: '会员',\n  },\n  {\n    value: '工作人员',\n    label: '工作人员',\n    children: [\n      {\n        value: '秘书',\n        label: '秘书',\n      },\n      {\n        value: '技术',\n        label: '技术',\n      },\n      {\n        value: '研策',\n        label: '研策',\n      },\n      {\n        value: '数资',\n        label: '数资',\n      },\n    ],\n  },\n];\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const onFinish = (value) => {\n    registerUser(value).then(() => {\n      // console.log(response.data);\n      navigate('/login');\n    });\n  };\n  return (\n    <div className={style.container}>\n      <div className={style.logo}>\n        <Image width={50} src={path} preview={false} />\n        <span className={style.logoText}>大数据学生实践与发展协会</span>\n      </div>\n      <div className={style.bgContainer}>\n        <div className={style.bgColor}>\n          <div className={style.formcontainer}>\n            <h2>注册信息</h2>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                name=\"residence\"\n                label=\"职位\"\n                rules={[\n                  {\n                    type: 'array',\n                    required: true,\n                    message: 'Please select your habitual residence!',\n                  },\n                ]}\n              >\n                <Cascader options={residences} />\n              </Form.Item>\n              <Form.Item\n                name=\"number\"\n                label=\"学号\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your 学号!',\n                  },\n                ]}\n              >\n                <Input\n                  type=\"number\"\n                  style={{\n                    width: '100%',\n                  }}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                label=\"姓名\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Username!',\n                  },\n                ]}\n              >\n                <Input\n                  type=\"text\"\n                  style={{\n                    width: '100%',\n                  }}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                label=\"密码\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your Password!',\n                  },\n                ]}\n              >\n                <Input\n                  type=\"password\"\n                  style={{\n                    width: '100%',\n                  }}\n                />\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className={style.registerformbtn}>\n                  注册\n                </Button>\n              </Form.Item>\n              <Form.Item>\n                <NavLink className={style.tologin} to=\"/login\">\n                  已有账号,前往登录\n                </NavLink>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const mockurl = '/mock';\n// '/mock';\n// '/association';\n"],"names":["getAuth","values","request","mockurl","params","method","number","password","result","data","deleteUser","registerUser","value","username","roleName","residence","getAllUserInfo","TOKEN_ERROR","NETWORK_ERROR","service","axios","baseURL","timeout","headers","options","toLowerCase","defaults","process","BASEURL","interceptors","use","config","encodeURIComponent","token","localStorage","getItem","common","Authorization","response","status","message","Promise","reject","forEach","item","url","residences","label","children","Register","navigate","useNavigate","className","style","width","src","path","preview","name","initialValues","remember","onFinish","then","rules","type","required","htmlType","to"],"sourceRoot":""}